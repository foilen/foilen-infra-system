plugins {
  id "com.github.ben-manes.versions" version "$versionsVersion"
  id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
}

allprojects {

  apply plugin: 'eclipse'

  group = 'com.foilen'
  version = System.getenv('VERSION')?:'master-SNAPSHOT'
  ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

}

subprojects {

  apply plugin: 'io.spring.dependency-management'
  apply plugin: 'maven'
  apply plugin: 'signing'

  apply plugin: 'java'

  repositories {
    mavenLocal()
    mavenCentral()
  }

  sourceCompatibility = 11

  dependencyManagement {
    imports {
      mavenBom "org.springframework.boot:spring-boot-starter-parent:$springBootVersion"
    }
  }

  eclipse {
    classpath {
      downloadSources = true
      downloadJavadoc = true
    }
  }

  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  artifacts {
    archives javadocJar, sourcesJar
  }
  
  signing {
	  required { isReleaseVersion && gradle.taskGraph.hasTask(":uploadArchives") }
	  sign configurations.archives
	}
  
  test {
    useJUnitPlatform()
  }

}
